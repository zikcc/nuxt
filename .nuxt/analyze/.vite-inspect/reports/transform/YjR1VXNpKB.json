{
  "resolvedId": "D:/CODE/blog/myNuxt/resGro/node_modules/element-plus/es/components/tour/src/step2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, inject, watch, computed, openBlock, createElementBlock, Fragment, unref, normalizeClass, createVNode, withCtx, createBlock, resolveDynamicComponent, createCommentVNode, createElementVNode, renderSlot, toDisplayString, renderList, mergeProps, createTextVNode } from 'vue';\nimport { omit } from 'lodash-unified';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { tourStepProps, tourStepEmits } from './step.mjs';\nimport { tourKey } from './helper.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { CloseComponents } from '../../../utils/vue/icon.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElTourStep\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: tourStepProps,\n  emits: tourStepEmits,\n  setup(__props, { emit }) {\n    const props = __props;\n    const { Close } = CloseComponents;\n    const { t } = useLocale();\n    const {\n      currentStep,\n      current,\n      total,\n      showClose,\n      closeIcon,\n      mergedType,\n      ns,\n      slots: tourSlots,\n      updateModelValue,\n      onClose: tourOnClose,\n      onFinish: tourOnFinish,\n      onChange\n    } = inject(tourKey);\n    watch(props, (val) => {\n      currentStep.value = val;\n    }, {\n      immediate: true\n    });\n    const mergedShowClose = computed(() => {\n      var _a;\n      return (_a = props.showClose) != null ? _a : showClose.value;\n    });\n    const mergedCloseIcon = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.closeIcon) != null ? _a : closeIcon.value) != null ? _b : Close;\n    });\n    const filterButtonProps = (btnProps) => {\n      if (!btnProps)\n        return;\n      return omit(btnProps, [\"children\", \"onClick\"]);\n    };\n    const onPrev = () => {\n      var _a, _b;\n      current.value -= 1;\n      if ((_a = props.prevButtonProps) == null ? void 0 : _a.onClick) {\n        (_b = props.prevButtonProps) == null ? void 0 : _b.onClick();\n      }\n      onChange();\n    };\n    const onNext = () => {\n      var _a;\n      if (current.value >= total.value - 1) {\n        onFinish();\n      } else {\n        current.value += 1;\n      }\n      if ((_a = props.nextButtonProps) == null ? void 0 : _a.onClick) {\n        props.nextButtonProps.onClick();\n      }\n      onChange();\n    };\n    const onFinish = () => {\n      onClose();\n      tourOnFinish();\n    };\n    const onClose = () => {\n      updateModelValue(false);\n      tourOnClose();\n      emit(\"close\");\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(Fragment, null, [\n        unref(mergedShowClose) ? (openBlock(), createElementBlock(\"button\", {\n          key: 0,\n          \"aria-label\": \"Close\",\n          class: normalizeClass(unref(ns).e(\"closebtn\")),\n          type: \"button\",\n          onClick: onClose\n        }, [\n          createVNode(unref(ElIcon), {\n            class: normalizeClass(unref(ns).e(\"close\"))\n          }, {\n            default: withCtx(() => [\n              (openBlock(), createBlock(resolveDynamicComponent(unref(mergedCloseIcon))))\n            ]),\n            _: 1\n          }, 8, [\"class\"])\n        ], 2)) : createCommentVNode(\"v-if\", true),\n        createElementVNode(\"header\", {\n          class: normalizeClass([unref(ns).e(\"header\"), { \"show-close\": unref(showClose) }])\n        }, [\n          renderSlot(_ctx.$slots, \"header\", {}, () => [\n            createElementVNode(\"span\", {\n              role: \"heading\",\n              class: normalizeClass(unref(ns).e(\"title\"))\n            }, toDisplayString(_ctx.title), 3)\n          ])\n        ], 2),\n        createElementVNode(\"div\", {\n          class: normalizeClass(unref(ns).e(\"body\"))\n        }, [\n          renderSlot(_ctx.$slots, \"default\", {}, () => [\n            createElementVNode(\"span\", null, toDisplayString(_ctx.description), 1)\n          ])\n        ], 2),\n        createElementVNode(\"footer\", {\n          class: normalizeClass(unref(ns).e(\"footer\"))\n        }, [\n          createElementVNode(\"div\", {\n            class: normalizeClass(unref(ns).b(\"indicators\"))\n          }, [\n            unref(tourSlots).indicators ? (openBlock(), createBlock(resolveDynamicComponent(unref(tourSlots).indicators), {\n              key: 0,\n              current: unref(current),\n              total: unref(total)\n            }, null, 8, [\"current\", \"total\"])) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(unref(total), (item, index) => {\n              return openBlock(), createElementBlock(\"span\", {\n                key: item,\n                class: normalizeClass([unref(ns).b(\"indicator\"), index === unref(current) ? \"is-active\" : \"\"])\n              }, null, 2);\n            }), 128))\n          ], 2),\n          createElementVNode(\"div\", {\n            class: normalizeClass(unref(ns).b(\"buttons\"))\n          }, [\n            unref(current) > 0 ? (openBlock(), createBlock(unref(ElButton), mergeProps({\n              key: 0,\n              size: \"small\",\n              type: unref(mergedType)\n            }, filterButtonProps(_ctx.prevButtonProps), { onClick: onPrev }), {\n              default: withCtx(() => {\n                var _a, _b;\n                return [\n                  createTextVNode(toDisplayString((_b = (_a = _ctx.prevButtonProps) == null ? void 0 : _a.children) != null ? _b : unref(t)(\"el.tour.previous\")), 1)\n                ];\n              }),\n              _: 1\n            }, 16, [\"type\"])) : createCommentVNode(\"v-if\", true),\n            unref(current) <= unref(total) - 1 ? (openBlock(), createBlock(unref(ElButton), mergeProps({\n              key: 1,\n              size: \"small\",\n              type: unref(mergedType) === \"primary\" ? \"default\" : \"primary\"\n            }, filterButtonProps(_ctx.nextButtonProps), { onClick: onNext }), {\n              default: withCtx(() => {\n                var _a, _b;\n                return [\n                  createTextVNode(toDisplayString((_b = (_a = _ctx.nextButtonProps) == null ? void 0 : _a.children) != null ? _b : unref(current) === unref(total) - 1 ? unref(t)(\"el.tour.finish\") : unref(t)(\"el.tour.next\")), 1)\n                ];\n              }),\n              _: 1\n            }, 16, [\"type\"])) : createCommentVNode(\"v-if\", true)\n          ], 2)\n        ], 2)\n      ], 64);\n    };\n  }\n});\nvar TourStep = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"step.vue\"]]);\n\nexport { TourStep as default };\n//# sourceMappingURL=step2.mjs.map\n",
      "start": 1715597139799,
      "end": 1715597139892,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715597139892,
      "end": 1715597139892,
      "order": "normal"
    }
  ]
}

{
  "resolvedId": "D:/CODE/Blog/nuxt-main/node_modules/lodash-es/mixin.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import arrayEach from './_arrayEach.js';\nimport arrayPush from './_arrayPush.js';\nimport baseFunctions from './_baseFunctions.js';\nimport copyArray from './_copyArray.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport keys from './keys.js';\n\n/**\n * Adds all own enumerable string keyed function properties of a source\n * object to the destination object. If `object` is a function, then methods\n * are added to its prototype as well.\n *\n * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n * avoid conflicts caused by modifying the original.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Function|Object} [object=lodash] The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n * @returns {Function|Object} Returns `object`.\n * @example\n *\n * function vowels(string) {\n *   return _.filter(string, function(v) {\n *     return /[aeiou]/i.test(v);\n *   });\n * }\n *\n * _.mixin({ 'vowels': vowels });\n * _.vowels('fred');\n * // => ['e']\n *\n * _('fred').vowels().value();\n * // => ['e']\n *\n * _.mixin({ 'vowels': vowels }, { 'chain': false });\n * _('fred').vowels();\n * // => ['e']\n */\nfunction mixin(object, source, options) {\n  var props = keys(source),\n      methodNames = baseFunctions(source, props);\n\n  var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n      isFunc = isFunction(object);\n\n  arrayEach(methodNames, function(methodName) {\n    var func = source[methodName];\n    object[methodName] = func;\n    if (isFunc) {\n      object.prototype[methodName] = function() {\n        var chainAll = this.__chain__;\n        if (chain || chainAll) {\n          var result = object(this.__wrapped__),\n              actions = result.__actions__ = copyArray(this.__actions__);\n\n          actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n          result.__chain__ = chainAll;\n          return result;\n        }\n        return func.apply(object, arrayPush([this.value()], arguments));\n      };\n    }\n  });\n\n  return object;\n}\n\nexport default mixin;\n",
      "start": 1715670285734,
      "end": 1715670285757,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715670285757,
      "end": 1715670285757,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715670285757,
      "end": 1715670285757,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715670285757,
      "end": 1715670285757,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715670285757,
      "end": 1715670285757,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715670285757,
      "end": 1715670285757,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715670285757,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715670285758,
      "end": 1715670285758,
      "order": "normal"
    }
  ]
}

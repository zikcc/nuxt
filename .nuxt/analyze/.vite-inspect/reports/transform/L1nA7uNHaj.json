{
  "resolvedId": "D:/CODE/Blog/nuxt-main/node_modules/element-plus/es/components/select/src/useOption.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { inject, computed, getCurrentInstance, toRaw, watch } from 'vue';\nimport { get, isEqual } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { selectKey, selectGroupKey } from './token.mjs';\nimport { isObject } from '@vue/shared';\nimport { escapeStringRegexp } from '../../../utils/strings.mjs';\n\nfunction useOption(props, states) {\n  const select = inject(selectKey);\n  const selectGroup = inject(selectGroupKey, { disabled: false });\n  const itemSelected = computed(() => {\n    if (select.props.multiple) {\n      return contains(select.props.modelValue, props.value);\n    } else {\n      return contains([select.props.modelValue], props.value);\n    }\n  });\n  const limitReached = computed(() => {\n    if (select.props.multiple) {\n      const modelValue = select.props.modelValue || [];\n      return !itemSelected.value && modelValue.length >= select.props.multipleLimit && select.props.multipleLimit > 0;\n    } else {\n      return false;\n    }\n  });\n  const currentLabel = computed(() => {\n    return props.label || (isObject(props.value) ? \"\" : props.value);\n  });\n  const currentValue = computed(() => {\n    return props.value || props.label || \"\";\n  });\n  const isDisabled = computed(() => {\n    return props.disabled || states.groupDisabled || limitReached.value;\n  });\n  const instance = getCurrentInstance();\n  const contains = (arr = [], target) => {\n    if (!isObject(props.value)) {\n      return arr && arr.includes(target);\n    } else {\n      const valueKey = select.props.valueKey;\n      return arr && arr.some((item) => {\n        return toRaw(get(item, valueKey)) === get(target, valueKey);\n      });\n    }\n  };\n  const hoverItem = () => {\n    if (!props.disabled && !selectGroup.disabled) {\n      select.states.hoveringIndex = select.optionsArray.indexOf(instance.proxy);\n    }\n  };\n  const updateOption = (query) => {\n    const regexp = new RegExp(escapeStringRegexp(query), \"i\");\n    states.visible = regexp.test(currentLabel.value) || props.created;\n  };\n  watch(() => currentLabel.value, () => {\n    if (!props.created && !select.props.remote)\n      select.setSelected();\n  });\n  watch(() => props.value, (val, oldVal) => {\n    const { remote, valueKey } = select.props;\n    if (!isEqual(val, oldVal)) {\n      select.onOptionDestroy(oldVal, instance.proxy);\n      select.onOptionCreate(instance.proxy);\n    }\n    if (!props.created && !remote) {\n      if (valueKey && isObject(val) && isObject(oldVal) && val[valueKey] === oldVal[valueKey]) {\n        return;\n      }\n      select.setSelected();\n    }\n  });\n  watch(() => selectGroup.disabled, () => {\n    states.groupDisabled = selectGroup.disabled;\n  }, { immediate: true });\n  return {\n    select,\n    currentLabel,\n    currentValue,\n    itemSelected,\n    isDisabled,\n    hoverItem,\n    updateOption\n  };\n}\n\nexport { useOption };\n//# sourceMappingURL=useOption.mjs.map\n",
      "start": 1715670285037,
      "end": 1715670285103,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715670285103,
      "end": 1715670285103,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715670285104,
      "end": 1715670285104,
      "order": "normal"
    }
  ]
}

{
  "resolvedId": "D:/CODE/blog/myNuxt/resGro/node_modules/element-plus/es/components/menu/src/sub-menu.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, getCurrentInstance, computed, inject, ref, reactive, watch, provide, onMounted, onBeforeUnmount, h, Fragment, withDirectives, vShow } from 'vue';\nimport { useTimeoutFn } from '@vueuse/core';\nimport _CollapseTransition from '../../collapse-transition/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ArrowDown, ArrowRight } from '@element-plus/icons-vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport useMenu from './use-menu.mjs';\nimport { useMenuCssVar } from './use-menu-css-var.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { isString } from '@vue/shared';\n\nconst subMenuProps = buildProps({\n  index: {\n    type: String,\n    required: true\n  },\n  showTimeout: Number,\n  hideTimeout: Number,\n  popperClass: String,\n  disabled: Boolean,\n  teleported: {\n    type: Boolean,\n    default: void 0\n  },\n  popperOffset: Number,\n  expandCloseIcon: {\n    type: iconPropType\n  },\n  expandOpenIcon: {\n    type: iconPropType\n  },\n  collapseCloseIcon: {\n    type: iconPropType\n  },\n  collapseOpenIcon: {\n    type: iconPropType\n  }\n});\nconst COMPONENT_NAME = \"ElSubMenu\";\nvar SubMenu = defineComponent({\n  name: COMPONENT_NAME,\n  props: subMenuProps,\n  setup(props, { slots, expose }) {\n    const instance = getCurrentInstance();\n    const { indexPath, parentMenu } = useMenu(instance, computed(() => props.index));\n    const nsMenu = useNamespace(\"menu\");\n    const nsSubMenu = useNamespace(\"sub-menu\");\n    const rootMenu = inject(\"rootMenu\");\n    if (!rootMenu)\n      throwError(COMPONENT_NAME, \"can not inject root menu\");\n    const subMenu = inject(`subMenu:${parentMenu.value.uid}`);\n    if (!subMenu)\n      throwError(COMPONENT_NAME, \"can not inject sub menu\");\n    const items = ref({});\n    const subMenus = ref({});\n    let timeout;\n    const mouseInChild = ref(false);\n    const verticalTitleRef = ref();\n    const vPopper = ref(null);\n    const currentPlacement = computed(() => mode.value === \"horizontal\" && isFirstLevel.value ? \"bottom-start\" : \"right-start\");\n    const subMenuTitleIcon = computed(() => {\n      return mode.value === \"horizontal\" && isFirstLevel.value || mode.value === \"vertical\" && !rootMenu.props.collapse ? props.expandCloseIcon && props.expandOpenIcon ? opened.value ? props.expandOpenIcon : props.expandCloseIcon : ArrowDown : props.collapseCloseIcon && props.collapseOpenIcon ? opened.value ? props.collapseOpenIcon : props.collapseCloseIcon : ArrowRight;\n    });\n    const isFirstLevel = computed(() => {\n      return subMenu.level === 0;\n    });\n    const appendToBody = computed(() => {\n      const value = props.teleported;\n      return value === void 0 ? isFirstLevel.value : value;\n    });\n    const menuTransitionName = computed(() => rootMenu.props.collapse ? `${nsMenu.namespace.value}-zoom-in-left` : `${nsMenu.namespace.value}-zoom-in-top`);\n    const fallbackPlacements = computed(() => mode.value === \"horizontal\" && isFirstLevel.value ? [\n      \"bottom-start\",\n      \"bottom-end\",\n      \"top-start\",\n      \"top-end\",\n      \"right-start\",\n      \"left-start\"\n    ] : [\n      \"right-start\",\n      \"right\",\n      \"right-end\",\n      \"left-start\",\n      \"bottom-start\",\n      \"bottom-end\",\n      \"top-start\",\n      \"top-end\"\n    ]);\n    const opened = computed(() => rootMenu.openedMenus.includes(props.index));\n    const active = computed(() => {\n      let isActive = false;\n      Object.values(items.value).forEach((item2) => {\n        if (item2.active) {\n          isActive = true;\n        }\n      });\n      Object.values(subMenus.value).forEach((subItem) => {\n        if (subItem.active) {\n          isActive = true;\n        }\n      });\n      return isActive;\n    });\n    const mode = computed(() => rootMenu.props.mode);\n    const item = reactive({\n      index: props.index,\n      indexPath,\n      active\n    });\n    const ulStyle = useMenuCssVar(rootMenu.props, subMenu.level + 1);\n    const subMenuPopperOffset = computed(() => {\n      var _a;\n      return (_a = props.popperOffset) != null ? _a : rootMenu.props.popperOffset;\n    });\n    const subMenuPopperClass = computed(() => {\n      var _a;\n      return (_a = props.popperClass) != null ? _a : rootMenu.props.popperClass;\n    });\n    const subMenuShowTimeout = computed(() => {\n      var _a;\n      return (_a = props.showTimeout) != null ? _a : rootMenu.props.showTimeout;\n    });\n    const subMenuHideTimeout = computed(() => {\n      var _a;\n      return (_a = props.hideTimeout) != null ? _a : rootMenu.props.hideTimeout;\n    });\n    const doDestroy = () => {\n      var _a, _b, _c;\n      return (_c = (_b = (_a = vPopper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.popperInstanceRef) == null ? void 0 : _c.destroy();\n    };\n    const handleCollapseToggle = (value) => {\n      if (!value) {\n        doDestroy();\n      }\n    };\n    const handleClick = () => {\n      if (rootMenu.props.menuTrigger === \"hover\" && rootMenu.props.mode === \"horizontal\" || rootMenu.props.collapse && rootMenu.props.mode === \"vertical\" || props.disabled)\n        return;\n      rootMenu.handleSubMenuClick({\n        index: props.index,\n        indexPath: indexPath.value,\n        active: active.value\n      });\n    };\n    const handleMouseenter = (event, showTimeout = subMenuShowTimeout.value) => {\n      var _a;\n      if (event.type === \"focus\") {\n        return;\n      }\n      if (rootMenu.props.menuTrigger === \"click\" && rootMenu.props.mode === \"horizontal\" || !rootMenu.props.collapse && rootMenu.props.mode === \"vertical\" || props.disabled) {\n        subMenu.mouseInChild.value = true;\n        return;\n      }\n      subMenu.mouseInChild.value = true;\n      timeout == null ? void 0 : timeout();\n      ({ stop: timeout } = useTimeoutFn(() => {\n        rootMenu.openMenu(props.index, indexPath.value);\n      }, showTimeout));\n      if (appendToBody.value) {\n        (_a = parentMenu.value.vnode.el) == null ? void 0 : _a.dispatchEvent(new MouseEvent(\"mouseenter\"));\n      }\n    };\n    const handleMouseleave = (deepDispatch = false) => {\n      var _a;\n      if (rootMenu.props.menuTrigger === \"click\" && rootMenu.props.mode === \"horizontal\" || !rootMenu.props.collapse && rootMenu.props.mode === \"vertical\") {\n        subMenu.mouseInChild.value = false;\n        return;\n      }\n      timeout == null ? void 0 : timeout();\n      subMenu.mouseInChild.value = false;\n      ({ stop: timeout } = useTimeoutFn(() => !mouseInChild.value && rootMenu.closeMenu(props.index, indexPath.value), subMenuHideTimeout.value));\n      if (appendToBody.value && deepDispatch) {\n        (_a = subMenu.handleMouseleave) == null ? void 0 : _a.call(subMenu, true);\n      }\n    };\n    watch(() => rootMenu.props.collapse, (value) => handleCollapseToggle(Boolean(value)));\n    {\n      const addSubMenu = (item2) => {\n        subMenus.value[item2.index] = item2;\n      };\n      const removeSubMenu = (item2) => {\n        delete subMenus.value[item2.index];\n      };\n      provide(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu,\n        handleMouseleave,\n        mouseInChild,\n        level: subMenu.level + 1\n      });\n    }\n    expose({\n      opened\n    });\n    onMounted(() => {\n      rootMenu.addSubMenu(item);\n      subMenu.addSubMenu(item);\n    });\n    onBeforeUnmount(() => {\n      subMenu.removeSubMenu(item);\n      rootMenu.removeSubMenu(item);\n    });\n    return () => {\n      var _a;\n      const titleTag = [\n        (_a = slots.title) == null ? void 0 : _a.call(slots),\n        h(ElIcon, {\n          class: nsSubMenu.e(\"icon-arrow\"),\n          style: {\n            transform: opened.value ? props.expandCloseIcon && props.expandOpenIcon || props.collapseCloseIcon && props.collapseOpenIcon && rootMenu.props.collapse ? \"none\" : \"rotateZ(180deg)\" : \"none\"\n          }\n        }, {\n          default: () => isString(subMenuTitleIcon.value) ? h(instance.appContext.components[subMenuTitleIcon.value]) : h(subMenuTitleIcon.value)\n        })\n      ];\n      const child = rootMenu.isMenuPopup ? h(ElTooltip, {\n        ref: vPopper,\n        visible: opened.value,\n        effect: \"light\",\n        pure: true,\n        offset: subMenuPopperOffset.value,\n        showArrow: false,\n        persistent: true,\n        popperClass: subMenuPopperClass.value,\n        placement: currentPlacement.value,\n        teleported: appendToBody.value,\n        fallbackPlacements: fallbackPlacements.value,\n        transition: menuTransitionName.value,\n        gpuAcceleration: false\n      }, {\n        content: () => {\n          var _a2;\n          return h(\"div\", {\n            class: [\n              nsMenu.m(mode.value),\n              nsMenu.m(\"popup-container\"),\n              subMenuPopperClass.value\n            ],\n            onMouseenter: (evt) => handleMouseenter(evt, 100),\n            onMouseleave: () => handleMouseleave(true),\n            onFocus: (evt) => handleMouseenter(evt, 100)\n          }, [\n            h(\"ul\", {\n              class: [\n                nsMenu.b(),\n                nsMenu.m(\"popup\"),\n                nsMenu.m(`popup-${currentPlacement.value}`)\n              ],\n              style: ulStyle.value\n            }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)])\n          ]);\n        },\n        default: () => h(\"div\", {\n          class: nsSubMenu.e(\"title\"),\n          onClick: handleClick\n        }, titleTag)\n      }) : h(Fragment, {}, [\n        h(\"div\", {\n          class: nsSubMenu.e(\"title\"),\n          ref: verticalTitleRef,\n          onClick: handleClick\n        }, titleTag),\n        h(_CollapseTransition, {}, {\n          default: () => {\n            var _a2;\n            return withDirectives(h(\"ul\", {\n              role: \"menu\",\n              class: [nsMenu.b(), nsMenu.m(\"inline\")],\n              style: ulStyle.value\n            }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)]), [[vShow, opened.value]]);\n          }\n        })\n      ]);\n      return h(\"li\", {\n        class: [\n          nsSubMenu.b(),\n          nsSubMenu.is(\"active\", active.value),\n          nsSubMenu.is(\"opened\", opened.value),\n          nsSubMenu.is(\"disabled\", props.disabled)\n        ],\n        role: \"menuitem\",\n        ariaHaspopup: true,\n        ariaExpanded: opened.value,\n        onMouseenter: handleMouseenter,\n        onMouseleave: () => handleMouseleave(),\n        onFocus: handleMouseenter\n      }, [child]);\n    };\n  }\n});\n\nexport { SubMenu as default, subMenuProps };\n//# sourceMappingURL=sub-menu.mjs.map\n",
      "start": 1715597138183,
      "end": 1715597138246,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715597138246,
      "end": 1715597138246,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715597138246,
      "end": 1715597138246,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715597138246,
      "end": 1715597138246,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715597138246,
      "end": 1715597138247,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715597138247,
      "end": 1715597138247,
      "order": "normal"
    }
  ]
}

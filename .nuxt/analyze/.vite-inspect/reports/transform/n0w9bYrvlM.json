{
  "resolvedId": "D:/CODE/Blog/nuxt-main/node_modules/element-plus/es/components/scrollbar/src/bar2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, inject, ref, openBlock, createElementBlock, Fragment, createVNode } from 'vue';\nimport { GAP } from './util.mjs';\nimport Thumb from './thumb2.mjs';\nimport { barProps } from './bar.mjs';\nimport { scrollbarContextKey } from './constants.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\n\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"bar\",\n  props: barProps,\n  setup(__props, { expose }) {\n    const props = __props;\n    const scrollbar = inject(scrollbarContextKey);\n    const moveX = ref(0);\n    const moveY = ref(0);\n    const sizeWidth = ref(\"\");\n    const sizeHeight = ref(\"\");\n    const ratioY = ref(1);\n    const ratioX = ref(1);\n    const handleScroll = (wrap) => {\n      if (wrap) {\n        const offsetHeight = wrap.offsetHeight - GAP;\n        const offsetWidth = wrap.offsetWidth - GAP;\n        moveY.value = wrap.scrollTop * 100 / offsetHeight * ratioY.value;\n        moveX.value = wrap.scrollLeft * 100 / offsetWidth * ratioX.value;\n      }\n    };\n    const update = () => {\n      const wrap = scrollbar == null ? void 0 : scrollbar.wrapElement;\n      if (!wrap)\n        return;\n      const offsetHeight = wrap.offsetHeight - GAP;\n      const offsetWidth = wrap.offsetWidth - GAP;\n      const originalHeight = offsetHeight ** 2 / wrap.scrollHeight;\n      const originalWidth = offsetWidth ** 2 / wrap.scrollWidth;\n      const height = Math.max(originalHeight, props.minSize);\n      const width = Math.max(originalWidth, props.minSize);\n      ratioY.value = originalHeight / (offsetHeight - originalHeight) / (height / (offsetHeight - height));\n      ratioX.value = originalWidth / (offsetWidth - originalWidth) / (width / (offsetWidth - width));\n      sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : \"\";\n      sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : \"\";\n    };\n    expose({\n      handleScroll,\n      update\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(Fragment, null, [\n        createVNode(Thumb, {\n          move: moveX.value,\n          ratio: ratioX.value,\n          size: sizeWidth.value,\n          always: _ctx.always\n        }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"]),\n        createVNode(Thumb, {\n          move: moveY.value,\n          ratio: ratioY.value,\n          size: sizeHeight.value,\n          vertical: \"\",\n          always: _ctx.always\n        }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"])\n      ], 64);\n    };\n  }\n});\nvar Bar = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"bar.vue\"]]);\n\nexport { Bar as default };\n//# sourceMappingURL=bar2.mjs.map\n",
      "start": 1715670285030,
      "end": 1715670285080,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715670285080,
      "end": 1715670285080,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715670285081,
      "end": 1715670285081,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715670285081,
      "end": 1715670285081,
      "order": "normal"
    }
  ]
}

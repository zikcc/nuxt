{
  "resolvedId": "D:/CODE/blog/myNuxt/resGro/node_modules/element-plus/es/components/table/src/table-body/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, getCurrentInstance, inject, watch, onUnmounted, h } from 'vue';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport useLayoutObserver from '../layout-observer.mjs';\nimport { removePopper } from '../util.mjs';\nimport { TABLE_INJECTION_KEY } from '../tokens.mjs';\nimport useRender from './render-helper.mjs';\nimport defaultProps from './defaults.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { addClass, removeClass } from '../../../../utils/dom/style.mjs';\nimport { isClient } from '@vueuse/core';\nimport { rAF } from '../../../../utils/raf.mjs';\n\nvar TableBody = defineComponent({\n  name: \"ElTableBody\",\n  props: defaultProps,\n  setup(props) {\n    const instance = getCurrentInstance();\n    const parent = inject(TABLE_INJECTION_KEY);\n    const ns = useNamespace(\"table\");\n    const { wrappedRowRender, tooltipContent, tooltipTrigger } = useRender(props);\n    const { onColumnsChange, onScrollableChange } = useLayoutObserver(parent);\n    const hoveredCellList = [];\n    watch(props.store.states.hoverRow, (newVal, oldVal) => {\n      var _a;\n      const el = instance == null ? void 0 : instance.vnode.el;\n      const rows = Array.from((el == null ? void 0 : el.children) || []).filter((e) => e == null ? void 0 : e.classList.contains(`${ns.e(\"row\")}`));\n      let rowNum = newVal;\n      const childNodes = (_a = rows[rowNum]) == null ? void 0 : _a.childNodes;\n      if (childNodes == null ? void 0 : childNodes.length) {\n        let control = 0;\n        const indexes = Array.from(childNodes).reduce((acc, item, index) => {\n          var _a2, _b;\n          if (((_a2 = childNodes[index]) == null ? void 0 : _a2.colSpan) > 1) {\n            control = (_b = childNodes[index]) == null ? void 0 : _b.colSpan;\n          }\n          if (item.nodeName !== \"TD\" && control === 0) {\n            acc.push(index);\n          }\n          control > 0 && control--;\n          return acc;\n        }, []);\n        indexes.forEach((rowIndex) => {\n          var _a2;\n          rowNum = newVal;\n          while (rowNum > 0) {\n            const preChildNodes = (_a2 = rows[rowNum - 1]) == null ? void 0 : _a2.childNodes;\n            if (preChildNodes[rowIndex] && preChildNodes[rowIndex].nodeName === \"TD\" && preChildNodes[rowIndex].rowSpan > 1) {\n              addClass(preChildNodes[rowIndex], \"hover-cell\");\n              hoveredCellList.push(preChildNodes[rowIndex]);\n              break;\n            }\n            rowNum--;\n          }\n        });\n      } else {\n        hoveredCellList.forEach((item) => removeClass(item, \"hover-cell\"));\n        hoveredCellList.length = 0;\n      }\n      if (!props.store.states.isComplex.value || !isClient)\n        return;\n      rAF(() => {\n        const oldRow = rows[oldVal];\n        const newRow = rows[newVal];\n        if (oldRow && !oldRow.classList.contains(\"hover-fixed-row\")) {\n          removeClass(oldRow, \"hover-row\");\n        }\n        if (newRow) {\n          addClass(newRow, \"hover-row\");\n        }\n      });\n    });\n    onUnmounted(() => {\n      var _a;\n      (_a = removePopper) == null ? void 0 : _a();\n    });\n    return {\n      ns,\n      onColumnsChange,\n      onScrollableChange,\n      wrappedRowRender,\n      tooltipContent,\n      tooltipTrigger\n    };\n  },\n  render() {\n    const { wrappedRowRender, store } = this;\n    const data = store.states.data.value || [];\n    return h(\"tbody\", { tabIndex: -1 }, [\n      data.reduce((acc, row) => {\n        return acc.concat(wrappedRowRender(row, acc.length));\n      }, [])\n    ]);\n  }\n});\n\nexport { TableBody as default };\n//# sourceMappingURL=index.mjs.map\n",
      "start": 1715597140768,
      "end": 1715597140842,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715597140842,
      "end": 1715597140842,
      "order": "normal"
    }
  ]
}

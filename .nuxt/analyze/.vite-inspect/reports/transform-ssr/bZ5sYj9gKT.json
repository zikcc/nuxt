{
  "resolvedId": "D:/CODE/Blog/nuxt-main/node_modules/element-plus/theme-chalk/src/tag.scss",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "@use 'sass:map';\n\n@use 'mixins/mixins' as *;\n@use 'mixins/var' as *;\n@use 'common/var' as *;\n\n@include b(tag) {\n  @include set-component-css-var('tag', $tag);\n}\n\n$tag-border-width: 1px;\n\n$tag-icon-span-gap: () !default;\n$tag-icon-span-gap: map.merge(\n  (\n    'large': 8px,\n    'default': 6px,\n    'small': 4px,\n  ),\n  $tag-icon-span-gap\n);\n\n@function returnVarList($var, $type: 'primary') {\n  $list: ('fill-color', 'blank');\n\n  @if $var !=false {\n    $list: ('color', $type, $var);\n  }\n\n  @return $list;\n}\n\n// false mean --el-color-white\n@mixin genTheme($backgroundColorWeight, $borderColorWeight, $hoverColorWeight) {\n  @include css-var-from-global(\n    ('tag', 'bg-color'),\n    returnVarList($backgroundColorWeight)\n  );\n  @include css-var-from-global(\n    ('tag', 'border-color'),\n    returnVarList($borderColorWeight)\n  );\n  @include css-var-from-global(\n    ('tag', 'hover-color'),\n    returnVarList($hoverColorWeight)\n  );\n\n  @each $type in $types {\n    &.#{bem('tag', '', $type)} {\n      @include css-var-from-global(\n        ('tag', 'bg-color'),\n        returnVarList($backgroundColorWeight, $type)\n      );\n      @include css-var-from-global(\n        ('tag', 'border-color'),\n        returnVarList($borderColorWeight, $type)\n      );\n      @include css-var-from-global(\n        ('tag', 'hover-color'),\n        returnVarList($hoverColorWeight, $type)\n      );\n    }\n  }\n}\n\n@include b(tag) {\n  @include genTheme('light-9', 'light-8', '');\n\n  @each $type in $types {\n    &.#{bem('tag', '', $type)} {\n      @include css-var-from-global(('tag', 'text-color'), ('color', $type));\n    }\n  }\n\n  @include when(hit) {\n    border-color: getCssVar('color', 'primary');\n  }\n\n  @include when(round) {\n    border-radius: getCssVar('tag', 'border-radius-rounded');\n  }\n\n  .#{$namespace}-tag__close {\n    flex-shrink: 0;\n    color: getCssVar('tag', 'text-color');\n\n    &:hover {\n      color: getCssVar('color-white');\n      background-color: getCssVar('tag-hover-color');\n    }\n  }\n\n  background-color: getCssVar('tag-bg-color');\n  border-color: getCssVar('tag-border-color');\n  color: getCssVar('tag-text-color');\n\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  vertical-align: middle;\n  height: map.get($tag-height, 'default');\n  padding: 0 map.get($tag-padding, 'default') - $border-width;\n\n  font-size: getCssVar('tag-font-size');\n  line-height: 1;\n  border-width: $tag-border-width;\n  border-style: solid;\n  border-radius: getCssVar('tag-border-radius');\n  box-sizing: border-box;\n  white-space: nowrap;\n\n  @include set-css-var-value('icon-size', 14px);\n\n  $svg-margin-size: 1px;\n\n  .#{$namespace}-icon {\n    border-radius: 50%;\n    cursor: pointer;\n\n    font-size: calc(#{getCssVar('icon-size')} - #{$svg-margin-size * 2});\n    height: getCssVar('icon-size');\n    width: getCssVar('icon-size');\n  }\n\n  .#{$namespace}-tag__close {\n    margin-left: map.get($tag-icon-span-gap, 'default');\n  }\n\n  @include m(dark) {\n    @include genTheme('', '', 'light-3');\n    @include css-var-from-global(('tag', 'text-color'), ('color', 'white'));\n\n    @each $type in $types {\n      &.#{bem('tag', '', $type)} {\n        @include css-var-from-global(('tag', 'text-color'), ('color', 'white'));\n      }\n    }\n  }\n\n  @include m(plain) {\n    @include genTheme(false, 'light-5', '');\n    @include css-var-from-global(('tag', 'bg-color'), ('fill-color', 'blank'));\n  }\n\n  &.is-closable {\n    padding-right: map.get($tag-icon-span-gap, 'default') - $border-width;\n  }\n\n  @each $size in (large, small) {\n    @include m($size) {\n      padding: 0 map.get($tag-padding, $size) - $tag-border-width;\n      height: map.get($tag-height, $size);\n\n      @include set-css-var-value(\n        'icon-size',\n        #{map.get($tag-icon-size, $size)}\n      );\n\n      .#{$namespace}-tag__close {\n        margin-left: map.get($tag-icon-span-gap, $size);\n      }\n\n      &.is-closable {\n        padding-right: map.get($tag-icon-span-gap, $size) - $border-width;\n      }\n    }\n  }\n\n  @include m(small) {\n    .#{$namespace}-icon-close {\n      transform: scale(0.8);\n    }\n  }\n\n  @each $type in $types {\n    &.#{bem('tag', '', $type)} {\n      @include when(hit) {\n        border-color: getCssVar('color', $type);\n      }\n    }\n  }\n}\n",
      "start": 1715588509535,
      "end": 1715588510380,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715588510380,
      "end": 1715588510380,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "result": ":root {\n  --el-color-primary: #fff;\n  --el-bg-color-overlay:transparent;\n}\n\n/* Element Chalk Variables */\n.el-tag {\n  --el-tag-font-size: 12px;\n  --el-tag-border-radius: 4px;\n  --el-tag-border-radius-rounded: 9999px;\n}\n\n.el-tag {\n  --el-tag-bg-color: var(--el-color-primary-light-9);\n  --el-tag-border-color: var(--el-color-primary-light-8);\n  --el-tag-hover-color: var(--el-color-primary);\n  align-items: center;\n  background-color: var(--el-tag-bg-color);\n  border-color: var(--el-tag-border-color);\n  border-radius: var(--el-tag-border-radius);\n  border-style: solid;\n  border-width: 1px;\n  box-sizing: border-box;\n  color: var(--el-tag-text-color);\n  display: inline-flex;\n  font-size: var(--el-tag-font-size);\n  height: 24px;\n  justify-content: center;\n  line-height: 1;\n  padding: 0 9px;\n  vertical-align: middle;\n  white-space: nowrap;\n  --el-icon-size: 14px;\n}\n.el-tag.el-tag--primary {\n  --el-tag-bg-color: var(--el-color-primary-light-9);\n  --el-tag-border-color: var(--el-color-primary-light-8);\n  --el-tag-hover-color: var(--el-color-primary);\n}\n.el-tag.el-tag--success {\n  --el-tag-bg-color: var(--el-color-success-light-9);\n  --el-tag-border-color: var(--el-color-success-light-8);\n  --el-tag-hover-color: var(--el-color-success);\n}\n.el-tag.el-tag--warning {\n  --el-tag-bg-color: var(--el-color-warning-light-9);\n  --el-tag-border-color: var(--el-color-warning-light-8);\n  --el-tag-hover-color: var(--el-color-warning);\n}\n.el-tag.el-tag--danger {\n  --el-tag-bg-color: var(--el-color-danger-light-9);\n  --el-tag-border-color: var(--el-color-danger-light-8);\n  --el-tag-hover-color: var(--el-color-danger);\n}\n.el-tag.el-tag--error {\n  --el-tag-bg-color: var(--el-color-error-light-9);\n  --el-tag-border-color: var(--el-color-error-light-8);\n  --el-tag-hover-color: var(--el-color-error);\n}\n.el-tag.el-tag--info {\n  --el-tag-bg-color: var(--el-color-info-light-9);\n  --el-tag-border-color: var(--el-color-info-light-8);\n  --el-tag-hover-color: var(--el-color-info);\n}\n.el-tag.el-tag--primary {\n  --el-tag-text-color: var(--el-color-primary);\n}\n.el-tag.el-tag--success {\n  --el-tag-text-color: var(--el-color-success);\n}\n.el-tag.el-tag--warning {\n  --el-tag-text-color: var(--el-color-warning);\n}\n.el-tag.el-tag--danger {\n  --el-tag-text-color: var(--el-color-danger);\n}\n.el-tag.el-tag--error {\n  --el-tag-text-color: var(--el-color-error);\n}\n.el-tag.el-tag--info {\n  --el-tag-text-color: var(--el-color-info);\n}\n.el-tag.is-hit {\n  border-color: var(--el-color-primary);\n}\n\n.el-tag.is-round {\n  border-radius: var(--el-tag-border-radius-rounded);\n}\n\n.el-tag .el-tag__close {\n  color: var(--el-tag-text-color);\n  flex-shrink: 0;\n}\n.el-tag .el-tag__close:hover {\n  background-color: var(--el-tag-hover-color);\n  color: var(--el-color-white);\n}\n.el-tag .el-icon {\n  border-radius: 50%;\n  cursor: pointer;\n  font-size: calc(var(--el-icon-size) - 2px);\n  height: var(--el-icon-size);\n  width: var(--el-icon-size);\n}\n.el-tag .el-tag__close {\n  margin-left: 6px;\n}\n.el-tag--dark {\n  --el-tag-bg-color: var(--el-color-primary);\n  --el-tag-border-color: var(--el-color-primary);\n  --el-tag-hover-color: var(--el-color-primary-light-3);\n  --el-tag-text-color: var(--el-color-white);\n}\n.el-tag--dark.el-tag--primary {\n  --el-tag-bg-color: var(--el-color-primary);\n  --el-tag-border-color: var(--el-color-primary);\n  --el-tag-hover-color: var(--el-color-primary-light-3);\n}\n.el-tag--dark.el-tag--success {\n  --el-tag-bg-color: var(--el-color-success);\n  --el-tag-border-color: var(--el-color-success);\n  --el-tag-hover-color: var(--el-color-success-light-3);\n}\n.el-tag--dark.el-tag--warning {\n  --el-tag-bg-color: var(--el-color-warning);\n  --el-tag-border-color: var(--el-color-warning);\n  --el-tag-hover-color: var(--el-color-warning-light-3);\n}\n.el-tag--dark.el-tag--danger {\n  --el-tag-bg-color: var(--el-color-danger);\n  --el-tag-border-color: var(--el-color-danger);\n  --el-tag-hover-color: var(--el-color-danger-light-3);\n}\n.el-tag--dark.el-tag--error {\n  --el-tag-bg-color: var(--el-color-error);\n  --el-tag-border-color: var(--el-color-error);\n  --el-tag-hover-color: var(--el-color-error-light-3);\n}\n.el-tag--dark.el-tag--info {\n  --el-tag-bg-color: var(--el-color-info);\n  --el-tag-border-color: var(--el-color-info);\n  --el-tag-hover-color: var(--el-color-info-light-3);\n}\n.el-tag--dark.el-tag--primary {\n  --el-tag-text-color: var(--el-color-white);\n}\n.el-tag--dark.el-tag--success {\n  --el-tag-text-color: var(--el-color-white);\n}\n.el-tag--dark.el-tag--warning {\n  --el-tag-text-color: var(--el-color-white);\n}\n.el-tag--dark.el-tag--danger {\n  --el-tag-text-color: var(--el-color-white);\n}\n.el-tag--dark.el-tag--error {\n  --el-tag-text-color: var(--el-color-white);\n}\n.el-tag--dark.el-tag--info {\n  --el-tag-text-color: var(--el-color-white);\n}\n\n.el-tag--plain {\n  --el-tag-border-color: var(--el-color-primary-light-5);\n  --el-tag-hover-color: var(--el-color-primary);\n  --el-tag-bg-color: var(--el-fill-color-blank);\n}\n.el-tag--plain.el-tag--primary {\n  --el-tag-bg-color: var(--el-fill-color-blank);\n  --el-tag-border-color: var(--el-color-primary-light-5);\n  --el-tag-hover-color: var(--el-color-primary);\n}\n.el-tag--plain.el-tag--success {\n  --el-tag-bg-color: var(--el-fill-color-blank);\n  --el-tag-border-color: var(--el-color-success-light-5);\n  --el-tag-hover-color: var(--el-color-success);\n}\n.el-tag--plain.el-tag--warning {\n  --el-tag-bg-color: var(--el-fill-color-blank);\n  --el-tag-border-color: var(--el-color-warning-light-5);\n  --el-tag-hover-color: var(--el-color-warning);\n}\n.el-tag--plain.el-tag--danger {\n  --el-tag-bg-color: var(--el-fill-color-blank);\n  --el-tag-border-color: var(--el-color-danger-light-5);\n  --el-tag-hover-color: var(--el-color-danger);\n}\n.el-tag--plain.el-tag--error {\n  --el-tag-bg-color: var(--el-fill-color-blank);\n  --el-tag-border-color: var(--el-color-error-light-5);\n  --el-tag-hover-color: var(--el-color-error);\n}\n.el-tag--plain.el-tag--info {\n  --el-tag-bg-color: var(--el-fill-color-blank);\n  --el-tag-border-color: var(--el-color-info-light-5);\n  --el-tag-hover-color: var(--el-color-info);\n}\n\n.el-tag.is-closable {\n  padding-right: 5px;\n}\n.el-tag--large {\n  height: 32px;\n  padding: 0 11px;\n  --el-icon-size: 16px;\n}\n.el-tag--large .el-tag__close {\n  margin-left: 8px;\n}\n.el-tag--large.is-closable {\n  padding-right: 7px;\n}\n\n.el-tag--small {\n  height: 20px;\n  padding: 0 7px;\n  --el-icon-size: 12px;\n}\n.el-tag--small .el-tag__close {\n  margin-left: 4px;\n}\n.el-tag--small.is-closable {\n  padding-right: 3px;\n}\n\n.el-tag--small .el-icon-close {\n  transform: scale(.8);\n}\n\n.el-tag.el-tag--primary.is-hit {\n  border-color: var(--el-color-primary);\n}\n\n.el-tag.el-tag--success.is-hit {\n  border-color: var(--el-color-success);\n}\n\n.el-tag.el-tag--warning.is-hit {\n  border-color: var(--el-color-warning);\n}\n\n.el-tag.el-tag--danger.is-hit {\n  border-color: var(--el-color-danger);\n}\n\n.el-tag.el-tag--error.is-hit {\n  border-color: var(--el-color-error);\n}\n\n.el-tag.el-tag--info.is-hit {\n  border-color: var(--el-color-info);\n}",
      "start": 1715588510380,
      "end": 1715588511651,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "D:/CODE/Blog/nuxt-main/node_modules/element-plus/theme-chalk/src/tag.scss",
        "mappings": "AAAA;EACE;EACA;;;ACFF;AC0DE;EChBI;EAAA;EAAA;;;ADgBJ;ECMA;EAAA;EAAA;ECkCA;EANA;EACA;EAcA;EADA;EADA,iBA/FiB;EAkGjB;EAdA;EAEA;EAOA;EAHA;EAHA;EAOA;EAHA;EAFA;EAUA;EDlGA;;ACqCE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;ACKE;EDLF;;ACKE;EDLF;;ACKE;EDLF;;ACKE;EDLF;;ACKE;EDLF;;ACKE;EDLF;;ADyGE;EE9FA;;;AF8FA;EE1FA;;;AAGF;EAEE;EADA;;AAGA;EAEE;EADA;;AA4BJ;EACE;EACA;EAEA;EACA;EACA;;AAGF;EACE;;AFpBA;ECzCF;EAAA;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;ACqEI;EDrEJ;;ACqEI;EDrEJ;;ACqEI;EDrEJ;;ACqEI;EDrEJ;;ACqEI;EDrEJ;;ACqEI;EDrEJ;;;ADyCE;ECzCF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;AChBE;EDgBF;EAAA;EAAA;;;ACgFA;EACE;;AFxCA;EE8CE;EADA;ED3IJ;;ACmJI;EACE;;AAGF;EACE;;;AF1DJ;EE8CE;EADA;ED3IJ;;ACmJI;EACE;;AAGF;EACE;;;AAMJ;EACE;;;AFDF;EEQI;;;AFRJ;EEQI;;;AFRJ;EEQI;;;AFRJ;EEQI;;;AFRJ;EEQI;;;AFRJ;EEQI",
        "names": [],
        "sources": [
          "D:/CODE/Blog/nuxt-main/assets/styles/element-variables.scss",
          "D:/CODE/Blog/nuxt-main/node_modules/element-plus/theme-chalk/src/common/var.scss",
          "D:/CODE/Blog/nuxt-main/node_modules/element-plus/theme-chalk/src/mixins/mixins.scss",
          "D:/CODE/Blog/nuxt-main/node_modules/element-plus/theme-chalk/src/mixins/_var.scss",
          "D:/CODE/Blog/nuxt-main/node_modules/element-plus/theme-chalk/src/tag.scss"
        ],
        "sourcesContent": [
          null,
          null,
          null,
          null,
          null
        ]
      }
    },
    {
      "name": "vite:esbuild",
      "start": 1715588511651,
      "end": 1715588511651,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715588511651,
      "end": 1715588511651,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715588511651,
      "end": 1715588511651,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715588511651,
      "end": 1715588511651,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715588511651,
      "end": 1715588511651,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715588511652,
      "end": 1715588511652,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715588511652,
      "end": 1715588511652,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715588511653,
      "end": 1715588511653,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715588511653,
      "end": 1715588511653,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715588511654,
      "end": 1715588511654,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715588511654,
      "end": 1715588511654,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715588511654,
      "end": 1715588511654,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715588511654,
      "end": 1715588511654,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715588511654,
      "end": 1715588511654,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715588511654,
      "end": 1715588511654,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715588511654,
      "end": 1715588511654,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "result": "export default ''",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:build-html",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715588511655,
      "end": 1715588511655,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715588511656,
      "end": 1715588511656,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715588511657,
      "end": 1715588511657,
      "order": "normal"
    }
  ]
}

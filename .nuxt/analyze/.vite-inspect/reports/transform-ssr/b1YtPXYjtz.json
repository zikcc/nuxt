{
  "resolvedId": "D:/CODE/Blog/nuxt-main/node_modules/element-plus/es/components/calendar/src/use-calendar.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, computed } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nconst adjacentMonth = (start, end) => {\n  const firstMonthLastDay = start.endOf(\"month\");\n  const lastMonthFirstDay = end.startOf(\"month\");\n  const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, \"week\");\n  const lastMonthStartDay = isSameWeek ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n  return [\n    [start, firstMonthLastDay],\n    [lastMonthStartDay.startOf(\"week\"), end]\n  ];\n};\nconst threeConsecutiveMonth = (start, end) => {\n  const firstMonthLastDay = start.endOf(\"month\");\n  const secondMonthFirstDay = start.add(1, \"month\").startOf(\"month\");\n  const secondMonthStartDay = firstMonthLastDay.isSame(secondMonthFirstDay, \"week\") ? secondMonthFirstDay.add(1, \"week\") : secondMonthFirstDay;\n  const secondMonthLastDay = secondMonthStartDay.endOf(\"month\");\n  const lastMonthFirstDay = end.startOf(\"month\");\n  const lastMonthStartDay = secondMonthLastDay.isSame(lastMonthFirstDay, \"week\") ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n  return [\n    [start, firstMonthLastDay],\n    [secondMonthStartDay.startOf(\"week\"), secondMonthLastDay],\n    [lastMonthStartDay.startOf(\"week\"), end]\n  ];\n};\nconst useCalendar = (props, emit, componentName) => {\n  const { lang } = useLocale();\n  const selectedDay = ref();\n  const now = dayjs().locale(lang.value);\n  const realSelectedDay = computed({\n    get() {\n      if (!props.modelValue)\n        return selectedDay.value;\n      return date.value;\n    },\n    set(val) {\n      if (!val)\n        return;\n      selectedDay.value = val;\n      const result = val.toDate();\n      emit(INPUT_EVENT, result);\n      emit(UPDATE_MODEL_EVENT, result);\n    }\n  });\n  const validatedRange = computed(() => {\n    if (!props.range)\n      return [];\n    const rangeArrDayjs = props.range.map((_) => dayjs(_).locale(lang.value));\n    const [startDayjs, endDayjs] = rangeArrDayjs;\n    if (startDayjs.isAfter(endDayjs)) {\n      debugWarn(componentName, \"end time should be greater than start time\");\n      return [];\n    }\n    if (startDayjs.isSame(endDayjs, \"month\")) {\n      return calculateValidatedDateRange(startDayjs, endDayjs);\n    } else {\n      if (startDayjs.add(1, \"month\").month() !== endDayjs.month()) {\n        debugWarn(componentName, \"start time and end time interval must not exceed two months\");\n        return [];\n      }\n      return calculateValidatedDateRange(startDayjs, endDayjs);\n    }\n  });\n  const date = computed(() => {\n    if (!props.modelValue) {\n      return realSelectedDay.value || (validatedRange.value.length ? validatedRange.value[0][0] : now);\n    } else {\n      return dayjs(props.modelValue).locale(lang.value);\n    }\n  });\n  const prevMonthDayjs = computed(() => date.value.subtract(1, \"month\").date(1));\n  const nextMonthDayjs = computed(() => date.value.add(1, \"month\").date(1));\n  const prevYearDayjs = computed(() => date.value.subtract(1, \"year\").date(1));\n  const nextYearDayjs = computed(() => date.value.add(1, \"year\").date(1));\n  const calculateValidatedDateRange = (startDayjs, endDayjs) => {\n    const firstDay = startDayjs.startOf(\"week\");\n    const lastDay = endDayjs.endOf(\"week\");\n    const firstMonth = firstDay.get(\"month\");\n    const lastMonth = lastDay.get(\"month\");\n    if (firstMonth === lastMonth) {\n      return [[firstDay, lastDay]];\n    } else if ((firstMonth + 1) % 12 === lastMonth) {\n      return adjacentMonth(firstDay, lastDay);\n    } else if (firstMonth + 2 === lastMonth || (firstMonth + 1) % 11 === lastMonth) {\n      return threeConsecutiveMonth(firstDay, lastDay);\n    } else {\n      debugWarn(componentName, \"start time and end time interval must not exceed two months\");\n      return [];\n    }\n  };\n  const pickDay = (day) => {\n    realSelectedDay.value = day;\n  };\n  const selectDate = (type) => {\n    const dateMap = {\n      \"prev-month\": prevMonthDayjs.value,\n      \"next-month\": nextMonthDayjs.value,\n      \"prev-year\": prevYearDayjs.value,\n      \"next-year\": nextYearDayjs.value,\n      today: now\n    };\n    const day = dateMap[type];\n    if (!day.isSame(date.value, \"day\")) {\n      pickDay(day);\n    }\n  };\n  return {\n    calculateValidatedDateRange,\n    date,\n    realSelectedDay,\n    pickDay,\n    selectDate,\n    validatedRange\n  };\n};\n\nexport { useCalendar };\n//# sourceMappingURL=use-calendar.mjs.map\n",
      "start": 1715670304767,
      "end": 1715670304975,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715670304976,
      "end": 1715670304976,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715670304976,
      "end": 1715670304977,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715670304977,
      "end": 1715670304977,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715670304977,
      "end": 1715670304977,
      "order": "normal"
    }
  ]
}

{
  "resolvedId": "D:/CODE/Blog/nuxt-main/node_modules/element-plus/es/components/drawer/src/drawer2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, useSlots, computed, ref, openBlock, createBlock, Teleport, createVNode, Transition, unref, withCtx, withDirectives, createElementVNode, mergeProps, withModifiers, normalizeClass, createElementBlock, renderSlot, toDisplayString, createCommentVNode, vShow } from 'vue';\nimport { Close } from '@element-plus/icons-vue';\nimport { ElOverlay } from '../../overlay/index.mjs';\nimport '../../focus-trap/index.mjs';\nimport '../../dialog/index.mjs';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { drawerProps, drawerEmits } from './drawer.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useDialog } from '../../dialog/src/use-dialog.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport ElFocusTrap from '../../focus-trap/src/focus-trap.mjs';\n\nconst _hoisted_1 = [\"aria-label\", \"aria-labelledby\", \"aria-describedby\"];\nconst _hoisted_2 = [\"id\", \"aria-level\"];\nconst _hoisted_3 = [\"aria-label\"];\nconst _hoisted_4 = [\"id\"];\nconst __default__ = defineComponent({\n  name: \"ElDrawer\",\n  inheritAttrs: false\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: drawerProps,\n  emits: drawerEmits,\n  setup(__props, { expose }) {\n    const props = __props;\n    const slots = useSlots();\n    useDeprecated({\n      scope: \"el-drawer\",\n      from: \"the title slot\",\n      replacement: \"the header slot\",\n      version: \"3.0.0\",\n      ref: \"https://element-plus.org/en-US/component/drawer.html#slots\"\n    }, computed(() => !!slots.title));\n    const drawerRef = ref();\n    const focusStartRef = ref();\n    const ns = useNamespace(\"drawer\");\n    const { t } = useLocale();\n    const {\n      afterEnter,\n      afterLeave,\n      beforeLeave,\n      visible,\n      rendered,\n      titleId,\n      bodyId,\n      zIndex,\n      onModalClick,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      onFocusoutPrevented,\n      onCloseRequested,\n      handleClose\n    } = useDialog(props, drawerRef);\n    const isHorizontal = computed(() => props.direction === \"rtl\" || props.direction === \"ltr\");\n    const drawerSize = computed(() => addUnit(props.size));\n    expose({\n      handleClose,\n      afterEnter,\n      afterLeave\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Teleport, {\n        to: \"body\",\n        disabled: !_ctx.appendToBody\n      }, [\n        createVNode(Transition, {\n          name: unref(ns).b(\"fade\"),\n          onAfterEnter: unref(afterEnter),\n          onAfterLeave: unref(afterLeave),\n          onBeforeLeave: unref(beforeLeave),\n          persisted: \"\"\n        }, {\n          default: withCtx(() => [\n            withDirectives(createVNode(unref(ElOverlay), {\n              mask: _ctx.modal,\n              \"overlay-class\": _ctx.modalClass,\n              \"z-index\": unref(zIndex),\n              onClick: unref(onModalClick)\n            }, {\n              default: withCtx(() => [\n                createVNode(unref(ElFocusTrap), {\n                  loop: \"\",\n                  trapped: unref(visible),\n                  \"focus-trap-el\": drawerRef.value,\n                  \"focus-start-el\": focusStartRef.value,\n                  onFocusAfterTrapped: unref(onOpenAutoFocus),\n                  onFocusAfterReleased: unref(onCloseAutoFocus),\n                  onFocusoutPrevented: unref(onFocusoutPrevented),\n                  onReleaseRequested: unref(onCloseRequested)\n                }, {\n                  default: withCtx(() => [\n                    createElementVNode(\"div\", mergeProps({\n                      ref_key: \"drawerRef\",\n                      ref: drawerRef,\n                      \"aria-modal\": \"true\",\n                      \"aria-label\": _ctx.title || void 0,\n                      \"aria-labelledby\": !_ctx.title ? unref(titleId) : void 0,\n                      \"aria-describedby\": unref(bodyId)\n                    }, _ctx.$attrs, {\n                      class: [unref(ns).b(), _ctx.direction, unref(visible) && \"open\"],\n                      style: unref(isHorizontal) ? \"width: \" + unref(drawerSize) : \"height: \" + unref(drawerSize),\n                      role: \"dialog\",\n                      onClick: _cache[1] || (_cache[1] = withModifiers(() => {\n                      }, [\"stop\"]))\n                    }), [\n                      createElementVNode(\"span\", {\n                        ref_key: \"focusStartRef\",\n                        ref: focusStartRef,\n                        class: normalizeClass(unref(ns).e(\"sr-focus\")),\n                        tabindex: \"-1\"\n                      }, null, 2),\n                      _ctx.withHeader ? (openBlock(), createElementBlock(\"header\", {\n                        key: 0,\n                        class: normalizeClass(unref(ns).e(\"header\"))\n                      }, [\n                        !_ctx.$slots.title ? renderSlot(_ctx.$slots, \"header\", {\n                          key: 0,\n                          close: unref(handleClose),\n                          titleId: unref(titleId),\n                          titleClass: unref(ns).e(\"title\")\n                        }, () => [\n                          !_ctx.$slots.title ? (openBlock(), createElementBlock(\"span\", {\n                            key: 0,\n                            id: unref(titleId),\n                            role: \"heading\",\n                            \"aria-level\": _ctx.headerAriaLevel,\n                            class: normalizeClass(unref(ns).e(\"title\"))\n                          }, toDisplayString(_ctx.title), 11, _hoisted_2)) : createCommentVNode(\"v-if\", true)\n                        ]) : renderSlot(_ctx.$slots, \"title\", { key: 1 }, () => [\n                          createCommentVNode(\" DEPRECATED SLOT \")\n                        ]),\n                        _ctx.showClose ? (openBlock(), createElementBlock(\"button\", {\n                          key: 2,\n                          \"aria-label\": unref(t)(\"el.drawer.close\"),\n                          class: normalizeClass(unref(ns).e(\"close-btn\")),\n                          type: \"button\",\n                          onClick: _cache[0] || (_cache[0] = (...args) => unref(handleClose) && unref(handleClose)(...args))\n                        }, [\n                          createVNode(unref(ElIcon), {\n                            class: normalizeClass(unref(ns).e(\"close\"))\n                          }, {\n                            default: withCtx(() => [\n                              createVNode(unref(Close))\n                            ]),\n                            _: 1\n                          }, 8, [\"class\"])\n                        ], 10, _hoisted_3)) : createCommentVNode(\"v-if\", true)\n                      ], 2)) : createCommentVNode(\"v-if\", true),\n                      unref(rendered) ? (openBlock(), createElementBlock(\"div\", {\n                        key: 1,\n                        id: unref(bodyId),\n                        class: normalizeClass(unref(ns).e(\"body\"))\n                      }, [\n                        renderSlot(_ctx.$slots, \"default\")\n                      ], 10, _hoisted_4)) : createCommentVNode(\"v-if\", true),\n                      _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", {\n                        key: 2,\n                        class: normalizeClass(unref(ns).e(\"footer\"))\n                      }, [\n                        renderSlot(_ctx.$slots, \"footer\")\n                      ], 2)) : createCommentVNode(\"v-if\", true)\n                    ], 16, _hoisted_1)\n                  ]),\n                  _: 3\n                }, 8, [\"trapped\", \"focus-trap-el\", \"focus-start-el\", \"onFocusAfterTrapped\", \"onFocusAfterReleased\", \"onFocusoutPrevented\", \"onReleaseRequested\"])\n              ]),\n              _: 3\n            }, 8, [\"mask\", \"overlay-class\", \"z-index\", \"onClick\"]), [\n              [vShow, unref(visible)]\n            ])\n          ]),\n          _: 3\n        }, 8, [\"name\", \"onAfterEnter\", \"onAfterLeave\", \"onBeforeLeave\"])\n      ], 8, [\"disabled\"]);\n    };\n  }\n});\nvar Drawer = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"drawer.vue\"]]);\n\nexport { Drawer as default };\n//# sourceMappingURL=drawer2.mjs.map\n",
      "start": 1715588505188,
      "end": 1715588505351,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715588505351,
      "end": 1715588505351,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1715588505351,
      "end": 1715588505351,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715588505351,
      "end": 1715588505351,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1715588505351,
      "end": 1715588505351,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715588505351,
      "end": 1715588505351,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715588505351,
      "end": 1715588505351,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715588505351,
      "end": 1715588505351,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715588505351,
      "end": 1715588505351,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715588505352,
      "end": 1715588505352,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1715588505353,
      "end": 1715588505353,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1715588505353,
      "end": 1715588505353,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715588505353,
      "end": 1715588505353,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715588505353,
      "end": 1715588505353,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715588505353,
      "end": 1715588505353,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715588505353,
      "end": 1715588505353,
      "order": "normal"
    }
  ]
}
